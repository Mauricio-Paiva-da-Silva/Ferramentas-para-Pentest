#---------Bivliotecas---------#

import socket

#---------Apresentação---------#

print("\nFERRAMENTAS PARA PENTEST\nSELETOR DE FERRAMENTAS")

#---------Padrões---------#

ports = [21, 22, 25, 53, 80, 110, 135, 136, 137, 138, 139, 143, 443, 3306, 3389, 8080]
allp = range(65535)

#---------Seletor---------#

print("\nSelecione uma ferramenta")
print("\n - [1] - PortScan\n")

fr = input(": ")

#---------Inicio---------#

if(fr == "1"):
	print("\n---------PORTSCAN---------\n")
	target = str(input("Alvo: "))
	port_select = str(input("\nEscanear todas as portas ou apenas as padrões?[T/p]: "))
	if(port_select == "p" or port_select == "P"):
		print("\nINICIANDO ESCANEAMENTO DAS PORTAS PADRÕES\n")
		for portl in ports:
			client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			client.settimeout(0.05)
			code = client.connect_ex((target, portl))
			code_transfer = str(code)
			if(code_transfer == "0"):
				print('PORTA: {} <----> '.format(portl) + '\033[32m' + 'ABERTA' + '\033[0;0m\n')
			else:
				print('PORTA: {} <----> '.format(portl) + '\033[31m' + 'FECHADA' + '\033[0;0m\n')
		print("\nESCANEAMENTO COMPLETO\n")
	else:
		print("\nINICIANDO ESCANEAMENTO DE TODAS AS PORTAS\nDeseja mesmo prosseguir?\n")
		confrm = str(input("[s/n]: "))
		if(confrm == "s" or confrm == "S"):
			for portl in allp:
				client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
				client.settimeout(0.05)
				code = client.connect_ex((target, portl))
				code_transfer = str(code)
				if(code_transfer == '0'):
					print('PORTA: {} <----> '.format(portl) + '\033[32m' + 'ABERTA' + '\033[0;0m\n')
			print("\nESCANEAMENTO COMPLETO\n")
		else:
			print("\nOkay\n")
else:
	print("\nCOMANDO NÃO RECONHECIDO\n")