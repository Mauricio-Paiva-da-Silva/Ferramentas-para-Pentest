#---------Bibliotecas---------#

import socket

#---------Padroes---------#

port_pattern = [21, 22, 25, 53, 80, 110, 135, 136, 137, 138, 139, 143, 443, 3306, 3389, 8080]
all_port = range(65535)

pp_o = []
pp_c = []
ap = []

#---------CLASS---------#

class PORTSCAN:
    def __init__(self, ip, port):
        self.ip = ip
        self.port = port
    pass
    
    def prun(self):

        target = self.ip
        ports = self.port

        if(ports == "pattern"):
            global port_pattern

            print("\nINICIANDO ESCANEAMENTO DAS PORTAS PADRÕES\n")

            for tport in port_pattern:
                client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                client.settimeout(0.05)
                code = client.connect_ex((target, tport))
                codet = str(code)
                if(codet == '0'):
                    pp_o.append(tport)
                else:
                    pp_c.append(tport)
            print("\nESCANEAMENTO COMPLETO\n")
        else:
            global all_port

            print("\nINICIANDO ESCANEAMENTO DE TODAS AS PORTAS\n")

            for tport in all_port:
                client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                client.settimeout(0.05)
                code = client.connect_ex((target, tport))
                codet = str(code)
                if(codet == '0'):
                    ap.append(tport)
            print("\nESCANEAMENTO COMPLETO\n")

    pass

    def re_p(self):
        global pp_o
        global pp_c

        print("\n#######################################################\n")
        print("                Relatório de PortScan                      ")
        print("\n - Portas abertas:\n")
        for p in pp_o:
            print('PORTA: {} <----> '.format(p) + '\033[32m' + 'ABERTA' + '\033[0;0m\n')
        print("\n - Portas frchadas:\n")
        for p in pp_c:
            print('PORTA: {} <----> '.format(p) + '\033[31m' + 'FECHADA' + '\033[0;0m\n')
    pass

    def re_a(self):
        global ap

        print("\n#######################################################\n")
        print("                Relatório de PortScan                      ")
        print("\n - Portas abertas:\n")
        for p in ap:
            print('PORTA: {} <----> '.format(p) + '\033[32m' + 'ABERTA' + '\033[0;0m\n')
    pass